name: SFTP Transfer Direct

on:
  repository_dispatch:
    types: [sftp_transfer]

jobs:
  transfer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Log event details
        run: |
          echo "Event received at $(date)"
          echo "Timestamp from request: ${{ github.event.client_payload.timestamp }}"
      
      - name: Create JSON file from payload
        run: |
          # Créer JSON directement à partir du payload
          echo '${{ toJson(github.event.client_payload.json_data) }}' > septeo.json
          
          # Vérifier que le fichier existe
          if [ -s septeo.json ]; then
            echo "JSON créé avec succès ($(stat -c%s septeo.json) octets)"
            echo "Aperçu du contenu:"
            head -n 5 septeo.json
          else
            echo "ERREUR: Création du fichier JSON échouée"
            # Créer un fichier de test minimal si le vrai fichier n'existe pas
            echo '{"test":"données test"}' > septeo.json
            echo "Fichier test créé à la place"
          fi
          
      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass openssh-client
          
      - name: Setup SFTP Private Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SFTP_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ftp.notaires.fr >> ~/.ssh/known_hosts
          echo "Clé privée installée"
          
      - name: Test SSH connection
        run: |
          echo "Test de connexion SSH..."
          sshpass -p "${{ secrets.SFTP_PASSPHRASE }}" ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa i00003-septeo@ftp.notaires.fr 'echo "Connexion réussie" && pwd && ls -la'
        continue-on-error: true
          
      - name: Transfer File via SFTP
        run: |
          echo "Début du transfert SFTP..."
          echo "Contenu du fichier local:"
          cat septeo.json
          
          # Premier essai avec sftp
          echo "Tentative SFTP avec chemin absolu..."
          sshpass -p "${{ secrets.SFTP_PASSPHRASE }}" sftp -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa i00003-septeo@ftp.notaires.fr << EOF
          pwd
          mkdir -p /json
          cd /json
          pwd
          put septeo.json
          ls -la
          bye
          EOF
        continue-on-error: true
          
      - name: Alternative transfer using scp
        run: |
          echo "Tentative alternative avec SCP..."
          # Créer un nom de fichier unique avec timestamp
          FILENAME="septeo_$(date +%s).json"
          
          # Tenter plusieurs variantes de chemins
          echo "Essai 1: Chemin absolu /json/"
          sshpass -p "${{ secrets.SFTP_PASSPHRASE }}" scp -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa septeo.json i00003-septeo@ftp.notaires.fr:/json/$FILENAME
          
          echo "Essai 2: Chemin relatif json/"
          sshpass -p "${{ secrets.SFTP_PASSPHRASE }}" scp -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa septeo.json i00003-septeo@ftp.notaires.fr:json/$FILENAME
          
          echo "Essai 3: À la racine"
          sshpass -p "${{ secrets.SFTP_PASSPHRASE }}" scp -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa septeo.json i00003-septeo@ftp.notaires.fr:$FILENAME
          
          echo "Transferts SCP terminés"
        continue-on-error: true
          
      - name: Verify file upload
        run: |
          echo "Vérification des fichiers transférés..."
          sshpass -p "${{ secrets.SFTP_PASSPHRASE }}" ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa i00003-septeo@ftp.notaires.fr << EOF
          echo "Contenu du répertoire /json:"
          ls -la /json/
          echo "Contenu du répertoire racine:"
          ls -la
          echo "Contenu du répertoire json (relatif):"
          ls -la json/
          EOF
          
      - name: Cleanup
        if: always()
        run: |
          rm -f septeo.json
          rm -f ~/.ssh/id_rsa
          echo "Nettoyage terminé"
